<br />
<div class="booyah-box-b col-10 offset-1 text-center">
  <div class="hero-a">
    <div class="booyah-box frosty col-10 offset-1">
      <h1 class="text-center"><%= @trip.name %></h1>
      <hr />
      <h5 class="text-center"><%= @trip.description %></h5>
    </div>
  </div>

  <div class="booyah-box-b frosty col-10 offset-1 text-center">
    <!DOCTYPE html>
    <html>
      <head>
        <title>Simple Map</title>
        <meta name="viewport" content="initial-scale=1.0">
        <meta charset="utf-8">
        <style>
          /* Always set the map height explicitly to define the size of the div
           * element that contains the map. */
          /* Optional: Makes the sample page fill the window. */
          html, body {
            height: 100%;
            margin: 0;
            padding: 0;
          }
        </style>
      </head>
  <body>
  <!-- this is the html tag where the map that we create below is going to go -->
        <div id="map"></div>
        <script>


 //below is an example of multiple coordinates.  we want to loop through the destinations and pull the lat/lng from each destination into a coordinate array []

// TODO: delete this stuff once everything is working
//use the above var coordinates code that's commented out, not the code below with harc coded lat/lng
// var coordinates = {
//   lat: -25.344,
//   lng: 131.036
// };
// var coordinatesTwo = {lat: -25.344, lng: 132.036};

          var averageCoordinates = {
            lat: <%= @average_coords[:lat] %>,
            lng: <%= @average_coords[:lng] %>
          };

          var googleMap;
          function initMap() {
            googleMap = new google.maps.Map(document.getElementById('map'), {
              center: averageCoordinates,
//check the center syntax.  the @average_coords is pulling the method in the trips controller.  we want that average coords to be where the map centers, not where the pins are.  pins are defined below
              zoom: 6
            });

            //loop through @destinations and add a new marker for each destination
            var marker = {};
            var markerCoordinates = {};
            
              <% @destinations.each do | destination | %>
                markerCoordinates = {
                  lat: <%= destination.latitude %>,
                  lng: <%= destination.longitude %>   
                };
                
                marker = new google.maps.Marker({
                  position: markerCoordinates,
                  map: googleMap
                });
            <% end %>
            

            // TODO: delete this stuff once everything is working
            //don't need two markers here.  just one marker that loops through the destinations.
          //   var marker = new google.maps.Marker({position: coordinates, map: map});
          // var markerTwo = new google.maps.Marker({position: coordinatesTwo, map: map});
          }
        </script>

        <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAOE-HGxJJ-LkvmoPg55T4NfiHutZ_fZG0&callback=initMap">
        </script>
      </body>
      </html>
    </div>
  </div>


    <hr />
    <br />
    <div class="row col-10 offset-1 text-center">
      <div class="col-12 col-sm text-center">
        <%= link_to 'Preview Trip Page', trip_path(@trip), class: 'btn btn-primary btn-sm'%>
      </div>
      <br />
      <div class="col-12 col-sm text-center ">
        <%= link_to 'Add a New Destination', new_traveler_trip_destination_path(@trip), class: 'btn btn-primary btn-sm' %>
        <br />
        <br />
      </div>
    </div>

    <ul>
      <% @trip.destinations.each do |destination| %>
        <div class="row frosty booyah-box-c col-12 col-sm"> 
          <h5 class="col-12 text-center"> <%= link_to destination.name, traveler_trip_destination_path(@trip, destination) %></h5>
        </div>
          <br />
      <% end %>
    </ul>
  </div>
</div>

